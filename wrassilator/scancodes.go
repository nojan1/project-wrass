package main

import (
	rl "github.com/gen2brain/raylib-go/raylib"
)

var scancodes = map[int32]int32 {
	rl.KeyEscape: 0x76,
	rl.KeyK: 0x42,
	rl.KeyF1: 0x05,
	rl.KeyL: 0x4b,
	rl.KeyF2: 0x06,
	rl.KeySemicolon: 0x4c,
	rl.KeyF3: 0x04,
	// rl.KeyQuote: 0x52,
	rl.KeyF4: 0x0c,
	rl.KeyEnter: 0x5a,
	rl.KeyF5: 0x03,
	rl.KeyLeftShift: 0x12,
	rl.KeyF6: 0x0b,
	rl.KeyZ: 0x1a,
	rl.KeyF7: 0x83,
	rl.KeyX: 0x22,
	rl.KeyF8: 0x0a,
	rl.KeyC: 0x21,
	rl.KeyF9: 0x01,
	rl.KeyV: 0x2a,
	rl.KeyF10: 0x09,
	rl.KeyB: 0x32,
	rl.KeyF11: 0x78,
	rl.KeyN: 0x31,
	rl.KeyF12: 0x07,
	rl.KeyM: 0x3a,
	rl.KeyComma: 0x41,
	rl.KeyPeriod: 0x49,
	rl.KeySlash: 0x4a,
	// rl.KeyBackQuote: 0x0e,
	rl.KeyRightShift: 0x59,
	rl.KeyOne: 0x16,
	rl.KeyLeftControl: 0x14,
	rl.KeyTwo: 0x1e,
	rl.KeyLeftSuper: 0xe01f,
	rl.KeyThree: 0x26,
	rl.KeyLeftAlt: 0x11,
	rl.KeyFour: 0x25,
	rl.KeySpace: 0x29,
	rl.KeyFive: 0x2e,
	rl.KeyRightAlt: 0xe011,
	rl.KeySix: 0x36,
	rl.KeyRightSuper: 0xe027,
	rl.KeySeven: 0x3d,
	rl.KeyMenu: 0xe02f,
	rl.KeyEight: 0x3e,
	rl.KeyRightControl: 0xe014,
	rl.KeyNine: 0x46,
	rl.KeyInsert: 0xe070,
	rl.KeyZero: 0x45,
	rl.KeyHome: 0xe06c,
	rl.KeyMinus: 0x4e,
	rl.KeyPageUp: 0xe07d,
	rl.KeyEqual: 0x55,
	rl.KeyDelete: 0xe071,
	rl.KeyBackspace: 0x66,
	rl.KeyEnd: 0xe069,
	rl.KeyTab: 0x0d,
	rl.KeyPageDown: 0xe07a,
	rl.KeyQ: 0x15,
	rl.KeyUp: 0xe075,
	rl.KeyW: 0x1d,
	rl.KeyLeft: 0xe06b,
	rl.KeyE: 0x24,
	rl.KeyDown: 0xe072,
	rl.KeyR: 0x2d,
	rl.KeyRight: 0xe074,
	rl.KeyT: 0x2c,
	rl.KeyNumLock: 0x77,
	rl.KeyY: 0x35,
	rl.KeyU: 0x3c,
	rl.KeyKpMultiply: 0x7c,
	rl.KeyI: 0x43,
	rl.KeyO: 0x44,
	rl.KeyKp7: 0x6c,
	rl.KeyP: 0x4d,
	rl.KeyKp8: 0x75,
	rl.KeyLeftBracket: 0x54,
	rl.KeyKp9: 0x7d,
	rl.KeyRightBracket: 0x5b,
	rl.KeyKpAdd: 0x79,
	rl.KeyBackSlash: 0x5d,
	rl.KeyKp4: 0x6b,
	rl.KeyCapsLock: 0x58,
	rl.KeyKp5: 0x73,
	rl.KeyA: 0x1c,
	rl.KeyKp6: 0x74,
	rl.KeyS: 0x1b,
	rl.KeyKp1: 0x69,
	rl.KeyD: 0x23,
	rl.KeyKp2: 0x72,
	rl.KeyF: 0x2b,
	rl.KeyKp3: 0x7a,
	rl.KeyG: 0x34,
	rl.KeyKp0: 0x70,
	rl.KeyH: 0x33,
	rl.KeyKpDecimal: 0x71,
	rl.KeyJ: 0x3b,
	rl.KeyKpEnter: 0xe05a,
	rl.KeyKpDivide: 0xe04a,
	rl.KeyKpSubtract: 0x7b,
}

func KeycodeFromRlKey(rlKey int32) int32 {
	if val, ok := scancodes[rlKey]; ok {
		return val
	}

	return 0x29
}