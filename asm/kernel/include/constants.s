;; BITFIELDS
KEYBOARD_RELEASE = %00000001
KEYBOARD_SHIFT   = %00000010

;; IO ADDRESSES
IO_BASE = $BC00
IO_USER_VIA_PORTB = IO_BASE + 0
IO_USER_VIA_PORTA = IO_USER_VIA_PORTB +1
IO_USER_VIA_DDRB = IO_USER_VIA_PORTA + 1
IO_USER_VIA_DDRA = IO_USER_VIA_DDRB + 1
IO_USER_VIA_T1CL = IO_USER_VIA_DDRA + 1
IO_USER_VIA_T1CH = IO_USER_VIA_T1CL + 1
IO_USER_VIA_T1LL = IO_USER_VIA_T1CH + 1
IO_USER_VIA_T1LH = IO_USER_VIA_T1LL + 1
IO_USER_VIA_T2CL = IO_USER_VIA_T1LH + 1
IO_USER_VIA_T2CH = IO_USER_VIA_T2CL + 1
IO_USER_VIA_SR = IO_USER_VIA_T2CH + 1
IO_USER_VIA_ACR = IO_USER_VIA_SR + 1
IO_USER_VIA_PCR = IO_USER_VIA_ACR + 1
IO_USER_VIA_IFR = IO_USER_VIA_PCR + 1
IO_USER_VIA_IER = IO_USER_VIA_IFR + 1
IO_USER_VIA_ORA = IO_USER_VIA_IER + 1

IO_SYSTEM_VIA_PORTB = IO_BASE + 16
IO_SYSTEM_VIA_PORTA = IO_SYSTEM_VIA_PORTB + 1
IO_SYSTEM_VIA_DDRB = IO_SYSTEM_VIA_PORTA + 1
IO_SYSTEM_VIA_DDRA = IO_SYSTEM_VIA_DDRB + 1
IO_SYSTEM_VIA_T1CL = IO_SYSTEM_VIA_DDRA + 1
IO_SYSTEM_VIA_T1CH = IO_SYSTEM_VIA_T1CL + 1
IO_SYSTEM_VIA_T1LL = IO_SYSTEM_VIA_T1CH + 1
IO_SYSTEM_VIA_T1LH = IO_SYSTEM_VIA_T1LL + 1
IO_SYSTEM_VIA_T2CL = IO_SYSTEM_VIA_T1LH + 1
IO_SYSTEM_VIA_T2CH = IO_SYSTEM_VIA_T2CL + 1
IO_SYSTEM_VIA_SR = IO_SYSTEM_VIA_T2CH + 1
IO_SYSTEM_VIA_ACR = IO_SYSTEM_VIA_SR + 1
IO_SYSTEM_VIA_PCR = IO_SYSTEM_VIA_ACR + 1
IO_SYSTEM_VIA_IFR = IO_SYSTEM_VIA_PCR + 1
IO_SYSTEM_VIA_IER = IO_SYSTEM_VIA_IFR + 1
IO_SYSTEM_VIA_ORA = IO_SYSTEM_VIA_IER + 1

GRAPHICS_BASE = $BC40
GRAPHICS_CONTROL = GRAPHICS_BASE
GRAPHICS_YOFFSET = GRAPHICS_CONTROL + 1
GRAPHICS_XOFFSET = GRAPHICS_YOFFSET + 1
GRAPHICS_INCREMENT = GRAPHICS_XOFFSET + 1
GRAPHICS_ADDR_LOW = GRAPHICS_INCREMENT + 1
GRAPHICS_ADDR_HIGH = GRAPHICS_ADDR_LOW + 1
GRAPHICS_DATA = GRAPHICS_ADDR_HIGH + 1
GRAPHICS_SCANLINE_HIGH = GRAPHICS_DATA + 1
GRAPHICS_SCANLINE_LOW = GRAPHICS_SCANLINE_HIGH + 1

LCD_PORTB = $BC80
LCD_PORTA = LCD_PORTB + 1
LCD_DDRB = LCD_PORTA + 1
LCD_DDRA = LCD_DDRB + 1

UART_BASE = $BCC0
UART_TRANSMIT = UART_BASE
UART_RECIEVE = UART_TRANSMIT + 1
UART_STATUS = UART_RECIEVE + 1
UART_CONFIG = UART_STATUS + 1

;; ZERO PAGE
MEM_CONTROL = $0
READ_POINTER = MEM_CONTROL + 1
WRITE_POINTER = READ_POINTER + 1
KEYBOARD_FLAGS = WRITE_POINTER +1

PARAM_16_1 = KEYBOARD_FLAGS + 1
PARAM_16_2 = PARAM_16_1 + 2
PARAM_16_3 = PARAM_16_2 + 2

CURRENT_LINE = PARAM_16_3 + 2
VAR_8BIT_1 = CURRENT_LINE + 1
VAR_8BIT_2 = VAR_8BIT_1 + 1
ERROR = VAR_8BIT_2 + 1

LBA_ADDRESS = ERROR + 1 ; 32 bit address
PARTITION_LBA = LBA_ADDRESS + 4 ; 32 bit
SECTORS_PER_CLUSTER = PARTITION_LBA + 4 ; 1 byte
FAT_BEGIN_LBA = SECTORS_PER_CLUSTER + 1 ; 32 bit
CLUSTER_BEGIN_LBA = FAT_BEGIN_LBA + 4 ; 32 bit
ROOT_CLUSTER = CLUSTER_BEGIN_LBA + 4
CURRENT_CLUSTER = ROOT_CLUSTER + 1 ; 32 bit

TERM_16_1_LOW = ROOT_CLUSTER + 4
TERM_16_1_HIGH = TERM_16_1_LOW + 1
TERM_16_2_LOW = TERM_16_1_HIGH + 3
TERM_16_2_HIGH = TERM_16_2_LOW + 1

TERM_32_1_1 = TERM_16_1_LOW
TERM_32_1_2 = TERM_16_1_HIGH
TERM_32_1_3 = TERM_32_1_2 + 1
TERM_32_1_4 = TERM_32_1_3 + 1
TERM_32_2_1 = TERM_16_2_LOW
TERM_32_2_2 = TERM_16_2_HIGH
TERM_32_2_3 = TERM_32_2_2 + 1
TERM_32_2_4 = TERM_32_2_3 + 1

ZP_USAGE_TOP = TERM_32_2_4 + 1

;; HIGHER RAM
INPUT_BUFFER = $0200
COMMAND_BUFFER = $0300

SD_BUFFER = $A000
IO_CONTROL = $A200
SYSTEM_IRQ = IO_CONTROL + 1
USER_IRQ = SYSTEM_IRQ + 2
SYSTEM_NMI = USER_IRQ + 2
SPI_CONFIG = SYSTEM_NMI + 2
KEYCODE_RAW = SPI_CONFIG + 1

;; Bitfields
GPU_OUTPUT  = 0b00000001
LCD_OUTPUT  = 0b00000010
UART_OUTPUT = 0b00000100
UART_INPUT_ENABLE = 0b00001000

KEYBOARD_INPUT = 0b10000000
UART_INPUT     = 0b01000000

UART_TRANSMIT_BUFFER_FULL = 0b01000000
UART_RECIEVE_BUFFER_NONEMPTY = 0b10000000
UART_IRQ_ACTIVE  = 0b00000010
UART_RECIEVE_BUFFER_FULL  = 0b00000001

UART_IRQ_ENABLE = 0b00000001

;; Graphic addresses
GRAPHICS_ADDR_TILEMAP_LOW = $00
GRAPHICS_ADDR_TILEMAP_HIGH = $00

GRAPHICS_ADDR_COLORATTRIBUTES_LOW = $00
GRAPHICS_ADDR_COLORATTRIBUTES_HIGH = $08

GRAPHICS_ADDR_TILEDATA_LOW = $00
GRAPHICS_ADDR_TILEDATA_HIGH = $10

GRAPHICS_ADDR_COLORS_LOW = $00
GRAPHICS_ADDR_COLORS_HIGH = $18

;; SPI

; SPI_CONFIG consists of the following
; x-x-POL-PHASE-CLOCK_DELAY(4 bit)

CPHASE_NORMAL = 0
CPHASE_INVERTED = 1 << 4

CPOL_NORMAL = 0
CPOL_INVERTED = 1 << 5

SPI_MODE_0 = CPHASE_NORMAL | CPOL_NORMAL
SPI_MODE_1 = CPHASE_INVERTED | CPOL_NORMAL
SPI_MODE_2 = CPHASE_NORMAL | CPOL_INVERTED
SPI_MODE_3 = CPHASE_INVERTED | CPOL_INVERTED

SPI_SLOWCLOCK = 2
SPI_FASTERCLOCK = 1

SPI_DEVICES_ENABLED = 1 << 0
SPI_DEVICES_DISABLED = 0 << 0

SPI_DEVICE_0 = (0 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_1 = (1 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_2 = (2 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_3 = (3 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_4 = (4 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_5 = (5 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_6 = (6 << 1) | SPI_DEVICES_ENABLED
SPI_DEVICE_7 = (7 << 1) | SPI_DEVICES_ENABLED

;;; SD CARD
SD_CARD_SPI_DEVICE = SPI_DEVICE_0